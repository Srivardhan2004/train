# matrix making :m=[[1,2,3],
#     [4,5,6],
#     [7,8,9]
#     ](m = [[0] * col for _ in range(row)])
#  row=len(m)
#  cols=len(m[0])
#  sum=0
# k=5(m[1][1],i=1,j=1)
# up=2(i-1,j)
# down=8(i+1,j)
# right=6(i,j+1)
# left=4(i,j-1)
# m=[[1,2,3],
#    [4,5,6],
#    [7,8,9]
#    ]
# row=len(m)
# cols=len(m[0])
# sum=0
# for i in range(0,row):
#     for j in range(0,cols):
#         sum+=m[i][j]
#         j+=1
#     i+=1
# print(sum)
# m=[[1,2,3],
#    [4,5,6],
#    [7,8,9]
#    ]
# row=len(m)
# cols=len(m[0])
# sum=0
# for i in range(0,row):
#     for j in range(0,cols):
#         z=m[i][j]
#         count=0
#         for k in range(2,z//2+1):
#             if z%k==0:
#                 count+=1
#                 k+=1
#         if count==0:
#             if z>1:
#                 sum+=z
#                 print(z)
#         j+=1
#     i+=1
# print(sum)
# m=[[1,2,3],
#    [4,5,6],
#    [7,8,9]
#    ]
# row=len(m)
# cols=len(m[0])
# sum=0
# z=int(input())
# for i in range(0,row):
#     for j in range(0,cols):
#         if z==m[i][j]:
#             u=m[i-1][j]
#             d=m[i+1][j]
#             r=m[i][j+1]
#             l=m[i][j-1]
#         j+=1
#     i+=1
# print(u,d,r,l)
# row=int(input())
# col=int(input())
# m = [[0] * col for _ in range(row)]
# for i in range(0,row):
#     for j in range(0,col):
#         m[i][j]=int(input())
#         
# print(m)
# def path(m, i, j, p, n):
#     # If we reached the bottom-right corner
#     if i == n - 1 and j == n - 1:
#         print(p)
#         return
# 
#     # Move down if possible
#     if i + 1 < n and m[i + 1][j] == 1:
#         path(m, i + 1, j, p + "d", n)
# 
#     # Move right if possible
#     if j + 1 < n and m[i][j + 1] == 1:
#         path(m, i, j + 1, p + "r", n)
# 
# # Test matrix
# m = [
#     [1, 1, 1, 0],
#     [0, 1, 1, 0],
#     [0, 1, 1, 0],
#     [1, 1, 1, 1]
# ]
# 
# # Initialize the path finding from the top-left corner
# path(m, 0, 0, "", len(m))
# def binary(n,res=" "):
#     if n==0:
#         print(res)
#         return
#     binary(n-1,res+"0")
#     binary(n-1,res+"1")
# n=2
# binary(n)
# def binary(n,res=" ",o=0,c=0):
#     if o==n and c==n:
#         print(res)
#         return
#     if o<n:
#         binary(n,res+"(",o+1,c)
#     if c<o:
#         binary(n,res+")",o,c+1)
# n=2
# binary(n)
# p=list(map(int,input().split()))
# min=p[0]
# max=0
# p1=0
# p2=0
# p3=0
# for i in range(0,len(p)):
#     if p[i]<min:
#         min=p[i]
#         p2=i
# for i in range(p2,len(p)):
#     if p[i]>max:
#         max=p[i]
#         p1=i
# if p2<p1:
#     p3=max-min
# print(p3)
# n=int(input())
# mul=1
# s="0"
# count=0
# for i in range(1,n+1):
#     mul*=i
#     i+=1
# p=str(mul)
# for j in p:
#     if j==s:
#         count+=1
# print(count)

        
        
        
        
